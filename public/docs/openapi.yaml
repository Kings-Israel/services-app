openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://services.test'
paths:
  /api/login:
    post:
      summary: 'Login the user.'
      operationId: loginTheUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Auth APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: "The user's email or phone number"
                  example: maxie21@example.com
                password:
                  type: string
                  description: "The user's password"
                  example: "!':^~,1b"
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: 'Register the user'
      operationId: registerTheUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Auth APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: "The vendor's first name"
                  example: debitis
                last_name:
                  type: string
                  description: "The vendor's last name"
                  example: quas
                email:
                  type: string
                  description: "The vendor's email"
                  example: tmurphy@example.com
                phone_number:
                  type: string
                  description: "The vendor's phone number"
                  example: sapiente
                password:
                  type: string
                  description: "The vendor's password"
                  example: 'I:{97)I'
                role:
                  type: string
                  description: "The person's role(vendor or user)"
                  example: omnis
              required:
                - first_name
                - last_name
                - email
                - phone_number
                - password
                - role
      security: []
  /api/forgot-password:
    post:
      summary: 'Request password reset code'
      operationId: requestPasswordResetCode
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Auth APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone_number:
                  type: string
                  description: "The user's phone number"
                  example: delectus
              required:
                - phone_number
      security: []
  /api/otp/validate:
    post:
      summary: 'Validate the OTP'
      operationId: validateTheOTP
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Auth APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: 'The Entered code'
                  example: rem
              required:
                - code
      security: []
  /api/reset-password:
    post:
      summary: 'Reset Password'
      operationId: resetPassword
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Auth APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: ''
                  example: et
                password:
                  type: string
                  description: 'New password'
                  example: 'hQ=9*Qgik?pg'
                password_confirmation:
                  type: string
                  description: 'New password confirmation'
                  example: rem
              required:
                - code
                - password
                - password_confirmation
      security: []
  /api/google/authenticate:
    post:
      summary: 'Social Login'
      operationId: socialLogin
      description: 'Login through google'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Auth APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the user'
                  example: consequatur
                email:
                  type: string
                  description: 'The email of the user'
                  example: keebler.christopher@example.org
                phone_number:
                  type: string
                  description: "The user's phone number"
                  example: magnam
                token:
                  type: string
                  description: 'A google provided token'
                  example: et
                email_verified:
                  type: boolean
                  description: 'Whether the user email is verified'
                  example: false
              required:
                - name
                - email
      security: []
  /api/logout:
    post:
      summary: Logout.
      operationId: logout
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Auth APIs'
  /api/categories:
    get:
      summary: 'List all the categories.'
      operationId: listAllTheCategories
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Categories APIs'
      security: []
  '/api/categories/{id}':
    get:
      summary: 'Get Category Details.'
      operationId: getCategoryDetails
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Categories APIs'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the category'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ipsum
  '/api/services/{latitude}/{longitude}':
    get:
      summary: 'Get all services.'
      operationId: getAllServices
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Services APIs'
      security: []
    parameters:
      -
        in: path
        name: latitude
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: aut
      -
        in: path
        name: longitude
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: sint
  '/api/services/{id}':
    get:
      summary: 'Show service details.'
      operationId: showServiceDetails
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Services APIs'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The id of the service'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: facere
  /api/services:
    post:
      summary: 'Add a new service.'
      operationId: addANewService
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Services APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The title of the new service'
                  example: hic
                price_min:
                  type: string
                  description: ''
                  example: tempora
                location_lat:
                  type: string
                  description: 'The latitude location of the new service'
                  example: veniam
                location_long:
                  type: string
                  description: 'The longitude location of the new service'
                  example: et
                categories:
                  type: array
                  description: 'The category/categories of the new service'
                  example:
                    - odit
                  items:
                    type: string
                description:
                  type: text
                  description: 'The description of the new service'
                  example: 'Esse esse delectus enim harum nostrum itaque est eligendi.'
                price:
                  type: string
                  description: 'The price of the new service'
                  example: et
              required:
                - title
                - price_min
                - location_lat
                - location_long
                - categories
                - price
  '/api/services/{id}/update':
    post:
      summary: 'Update a service.'
      operationId: updateAService
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Services APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'The title of the service'
                  example: ea
                price_min:
                  type: string
                  description: ''
                  example: ad
                location_lat:
                  type: string
                  description: 'The latitude location of the new service'
                  example: rerum
                location_long:
                  type: string
                  description: 'The longitude location of the new service'
                  example: non
                categories:
                  type: object
                  description: ''
                  example: []
                  properties: []
                description:
                  type: string
                  description: 'The description of the service'
                  example: 'Eos voluptatem illo molestias est tempore.'
                price:
                  type: string
                  description: 'The price of the service'
                  example: et
              required:
                - title
                - price_min
                - categories
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the service'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: in
  '/api/services/{id}/images/add':
    post:
      summary: 'Add services images'
      operationId: addServicesImages
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Services APIs'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                images:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: string
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The id of the service'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: qui
  /api/service/request:
    post:
      summary: 'Request for a service'
      operationId: requestForAService
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Services APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_id:
                  type: string
                  description: 'The id of the service'
                  example: quisquam
                message:
                  type: string
                  description: 'An optional message for the service provider'
                  example: tenetur
              required:
                - service_id
  /api/service/delivery/status/update:
    post:
      summary: 'Change the status of a service delivery request'
      operationId: changeTheStatusOfAServiceDeliveryRequest
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Services APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_request_id:
                  type: string
                  description: 'The ID of the service request to be changed'
                  example: provident
                status:
                  type: string
                  description: 'The new status of the service(Completed/Delivered, Delete, Dispute)'
                  example: est
                service_id:
                  type: string
                  description: 'The ID of the service'
                  example: dolor
              required:
                - service_request_id
                - status
                - service_id
  /api/service/requests:
    get:
      summary: 'Get Service Requests'
      operationId: getServiceRequests
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'Services APIs'
  /api/user:
    get:
      summary: 'Get user details.'
      operationId: getUserDetails
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'User APIs'
tags:
  -
    name: 'Auth APIs'
    description: ''
  -
    name: 'Categories APIs'
    description: ''
  -
    name: 'Services APIs'
    description: ''
  -
    name: 'User APIs'
    description: ''
